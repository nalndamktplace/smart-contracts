/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  NalndaAirdrop,
  NalndaAirdropInterface,
} from "../../../contracts/Airdrop.sol/NalndaAirdrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_initOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marketplace",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "currentNalndaBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentSlab",
    outputs: [
      {
        internalType: "enum NalndaAirdrop.AirdropSlab",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "distributeTokensIfAny",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isAirdropActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxAirdropTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nalndaToken",
    outputs: [
      {
        internalType: "contract NalndaToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum NalndaAirdrop.AirdropSlab",
        name: "",
        type: "uint8",
      },
    ],
    name: "tokensToDistributePerBook",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllNalndaAndStopAirdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAnyEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e060408181523461040c578082611995803803809161001f8285610411565b83398101031261040c576100328261044a565b91610040602080920161044a565b926001600160a01b039081169182156103f457600080546001600160a01b03198116851782558551919490819085167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08780a3610a9382810191906001600160401b038311848410176103e0579183918893610f0284393082528582015203019084f080156103d6579082916080968188526a0b2abc7767ce87fd80000060a05286516370a0823160e01b815283816004943086830152816024998a92165afa90811561035a5787916103a5575b5060a0510361036457831660c0528287511686518381848163313ce56760e01b958682525afa90811561035a579061014d918891610343575b50610477565b936103e8948086029586040361033157868052600394858552888820558284828b51168a51928380928782525afa90811561032757906101939189916103105750610477565b6101f490808202918204036102fe5760018852858552888820558284828b51168a51928380928782525afa90811561032757906101d69189916103105750610477565b8060fa029060fa8204036102fe5760028852858552888820558284828b51168a51928380928782525afa90811561032757906102189189916103105750610477565b806096029060968204036102fe5790849186895286835289892055895116918389518094819382525afa9081156102f4579061025a9187916102c75750610477565b93846064029460648604036102b657508452528282205560015551610a63918261049f8339518181816102360152818161047301528181610511015281816106d301526107db015260a0518161016f015260c051816103480152f35b634e487b7160e01b86526011825285fd5b6102e79150843d86116102ed575b6102df8183610411565b81019061045e565b38610147565b503d6102d5565b87513d88823e3d90fd5b634e487b7160e01b8852601184528688fd5b6102e79150863d88116102ed576102df8183610411565b89513d8a823e3d90fd5b634e487b7160e01b8752601183528587fd5b6102e79150853d87116102ed576102df8183610411565b88513d89823e3d90fd5b50601d8460649388519362461bcd60e51b85528401528201527f496e76616c69642061697264726f7020746f6b656e2062616c616e63650000006044820152fd5b90508381813d83116103cf575b6103bc8183610411565b810103126103cb57513861010e565b8680fd5b503d6103b2565b84513d85823e3d90fd5b634e487b7160e01b87526041600452602487fd5b8351631e4fbdf760e01b815260006004820152602490fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761043457604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361040c57565b9081602091031261040c575160ff8116810361040c5790565b60ff16604d811161048857600a0a90565b634e487b7160e01b600052601160045260246000fdfe60406080815260048036101561001c575b5050361561001a57005b005b600091823560e01c8381630befcd75146104d45750806319a2e2a0146104a25780633671cb371461045e578063422c0d611461041e578063656ac71814610305578063715018a6146102ba578063888fa88a146102095780638da5cb5b146101e15780639e785bca14610192578063d647427f14610157578063e20d810f1461012d5763f2fde38b146100af5750610010565b34610129576020366003190112610129576001600160a01b03823581811693919290849003610125576100e061084c565b831561010f57505082546001600160a01b031981168317845516600080516020610a0e8339815191528380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8480fd5b8280fd5b83823461015357816003193601126101535760209061014a6107c0565b90519015158152f35b5080fd5b838234610153578160031936011261015357602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b8382346101535781600319360112610153576101ac61084c565b8180808060018060a01b0381541647908282156101d8575bf1156101ce575080f35b51903d90823e3d90fd5b506108fc6101c4565b838234610153578160031936011261015357905490516001600160a01b039091168152602090f35b503461012957826003193601126101295780516370a0823160e01b815230928101929092526020826024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9182156102b0578392610278575b6020838351908152f35b9091506020813d6020116102a8575b816102946020938361061e565b81010312610129576020925051903861026e565b3d9150610287565b81513d85823e3d90fd5b83346103025780600319360112610302576102d361084c565b80546001600160a01b03198116825581906001600160a01b0316600080516020610a0e8339815191528280a380f35b80fd5b509034610129576020366003190112610129578035916001600160a01b038084168403610125576020602491835192838092632df628b960e01b825233888301527f0000000000000000000000000000000000000000000000000000000000000000165afa9081156104145785916103e5575b501561038b57836103888461068f565b80f35b906020608492519162461bcd60e51b8352820152602e60248201527f4f6e6c7920626f6f6b73206372656174656420627920746865206d61726b657460448201526d706c61636520616c6c6f7765642160901b6064820152fd5b610407915060203d60201161040d575b6103ff818361061e565b810190610657565b38610378565b503d6103f5565b82513d87823e3d90fd5b5082903461015357816003193601126101535760ff60025416905191600682101561044b57602083838152f35b634e487b7160e01b815260218452602490fd5b838234610153578160031936011261015357517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b509034610129576020366003190112610129573591600683101561030257506104cc6020926105ef565b549051908152f35b919050346101535781600319360112610153576104ef61084c565b815481516370a0823160e01b8152308582015260209490916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116929116908684602481865afa9384156105e55790879493929187946105ac575b50956105729686519788958694859363a9059cbb60e01b85528401610674565b03925af19081156105a35750610586578280f35b8161059c92903d1061040d576103ff818361061e565b5038808280f35b513d85823e3d90fd5b8581969295503d83116105de575b6105c4818361061e565b810103126105da57925186939092610572610552565b8580fd5b503d6105ba565b85513d88823e3d90fd5b6006811015610608576000526003602052604060002090565b634e487b7160e01b600052602160045260246000fd5b601f909101601f19168101906001600160401b0382119082101761064157604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261066f5751801515810361066f5790565b600080fd5b6001600160a01b039091168152602081019190915260400190565b6106976107c0565b1561077a576106a4610878565b60ff60025416600681101561060857600581146107bc576040516370a0823160e01b81523060048201526020927f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692918481602481875afa90811561077d5760009161078f575b5061071e836105ef565b5411610789576107529261073285936105ef565b5491600060405180968195829463a9059cbb60e01b845260048401610674565b03925af1801561077d57610764575050565b8161077a92903d1061040d576103ff818361061e565b50565b6040513d6000823e3d90fd5b50505050565b90508481813d83116107b5575b6107a6818361061e565b8101031261066f575138610714565b503d61079c565b5050565b6040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561077d5760009161081a575b50151590565b90506020813d602011610844575b816108356020938361061e565b8101031261066f575138610814565b3d9150610828565b6000546001600160a01b0316330361086057565b60405163118cdaa760e01b8152336004820152602490fd5b6002805460ff9060069082811682811015610608576005146107895760015460001981146109f75760010180600155801515806109eb575b156108d5575050825491821690811015610608576108cd5750505b565b60ff19169055565b6113888111806109df575b1561090a575050825491821690811015610608576001036108ff575050565b60ff19166001179055565b6127108111806109d3575b1561093d575050825491821690811015610608578203610933575050565b60ff191681179055565b614e208111806109c7575b1561097257505082549182169081101561060857600303610967575050565b60ff19166003179055565b617530811190816109ba575b50156109a857508254918216908110156106085760040361099d575050565b60ff19166004179055565b60ff1916600517909255506108cb9050565b61c350915011153861097e565b50617530811115610948565b50614e20811115610915565b506127108111156108e0565b506113888111156108b0565b634e487b7160e01b600052601160045260246000fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a264697066735822122088e760708b6b659556b7cd2ee56888b1d5145e8de88cf4d45ea32d2641417fac64736f6c634300081900336080346103f4576001600160401b0390601f90610a9390601f193883900384810182168301908682118483101761030457808491604096879485528339810103126103f45761004d82610418565b9061005b6020809401610418565b956100646103f9565b95600c87526b2730b6373230902a37b5b2b760a11b858801526100856103f9565b9660068852654e414c4e444160d01b868901528051918383116103045760039283546001938482811c921680156103ea575b8a8310146103d4578184849311610383575b5089908483116001146103255760009261031a575b505060001982861b1c191690831b1783555b88519384116103045760049889548381811c911680156102fa575b898210146102e55782811161029f575b508791851160011461023b5784955090849291600095610230575b50501b92600019911b1c19161784555b6001600160a01b0390811694851561021957600254956a0b2abc7767ce87fd80000096878101809111610204578495969760009160025582825281865287822081815401905587519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958691a316918215610219576002546b01926c61d88071967680000090818101809111610204576000949596506002558484528382528584208181540190558551908152a351610666908161042d8239f35b601187634e487b7160e01b6000525260246000fd5b835163ec442f0560e01b8152600081870152602490fd5b015193503880610136565b9291948416928960005284886000209460005b8a89838310610288575050501061026e575b50505050811b018455610146565b01519060f884600019921b161c1916905538808080610260565b86860151895590970196948501948893500161024e565b8a600052886000208380880160051c8201928b89106102dc575b0160051c019084905b8281106102d057505061011b565b600081550184906102c2565b925081926102b9565b60228b634e487b7160e01b6000525260246000fd5b90607f169061010b565b634e487b7160e01b600052604160045260246000fd5b0151905038806100de565b908886941691876000528b6000209260005b8d82821061036d5750508411610355575b505050811b0183556100f0565b015160001983881b60f8161c19169055388080610348565b8385015186558997909501949384019301610337565b90915085600052896000208480850160051c8201928c86106103cb575b918791869594930160051c01915b8281106103bc5750506100c9565b600081558594508791016103ae565b925081926103a0565b634e487b7160e01b600052602260045260246000fd5b91607f16916100b7565b600080fd5b60408051919082016001600160401b0381118382101761030457604052565b51906001600160a01b03821682036103f45756fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461041357508163095ea7b31461036557816318160ddd1461034657816323b872dd14610259578163313ce5671461023d57816370a082311461020657816395d89b411461010357508063a9059cbb146100d35763dd62ed3e1461008857600080fd5b346100cf57806003193601126100cf57806020926100a4610518565b6100ac610533565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100cf57806003193601126100cf576020906100fc6100f2610518565b6024359033610567565b5160018152f35b8383346100cf57816003193601126100cf5780519082845460018160011c90600183169283156101fc575b60209384841081146101e9578388529081156101cd5750600114610195575b505050829003601f01601f19168201926001600160401b03841183851017610182575082918261017e9252826104cf565b0390f35b634e487b7160e01b815260418552602490fd5b919250868652828620918387935b8385106101b9575050505083010185808061014d565b8054888601830152930192849082016101a3565b60ff1916878501525050151560051b840101905085808061014d565b634e487b7160e01b895260228a52602489fd5b91607f169161012e565b5050346100cf5760203660031901126100cf5760209181906001600160a01b0361022e610518565b16815280845220549051908152f35b5050346100cf57816003193601126100cf576020905160128152f35b9050823461034357606036600319011261034357610275610518565b61027d610533565b916044359360018060a01b0383168083526001602052868320338452602052868320549160001983036102b9575b6020886100fc898989610567565b86831061032157811561030a5733156102f3575082526001602090815286832033845281529186902090859003905582906100fc876102ab565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b905061033f868851938493637dc7a0d960e11b855233908501610549565b0390fd5b80fd5b5050346100cf57816003193601126100cf576020906002549051908152f35b90503461040f578160031936011261040f5761037f610518565b6024359033156103f8576001600160a01b03169182156103e157508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b8280fd5b8490843461040f578260031936011261040f578260035460018160011c90600183169283156104c5575b60209384841081146101e9578388529081156101cd575060011461048c57505050829003601f01601f19168201926001600160401b03841183851017610182575082918261017e9252826104cf565b91925060038652828620918387935b8385106104b1575050505083010185808061014d565b80548886018301529301928490820161049b565b91607f169161043d565b6020808252825181830181905290939260005b82811061050457505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016104e2565b600435906001600160a01b038216820361052e57565b600080fd5b602435906001600160a01b038216820361052e57565b604091949392606082019560018060a01b0316825260208201520152565b916001600160a01b0380841692831561061757169283156105fe57600090838252816020526040822054908382106105e1575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b61033f8460405193849363391434e360e21b855260048501610549565b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fdfea264697066735822122047ad0c5c7578a95ef223f183962c7ca93c3ea4a4004591a1c92520ffad88241a64736f6c63430008190033";

type NalndaAirdropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NalndaAirdropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NalndaAirdrop__factory extends ContractFactory {
  constructor(...args: NalndaAirdropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _initOwner: PromiseOrValue<string>,
    _marketplace: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NalndaAirdrop> {
    return super.deploy(
      _initOwner,
      _marketplace,
      overrides || {}
    ) as Promise<NalndaAirdrop>;
  }
  override getDeployTransaction(
    _initOwner: PromiseOrValue<string>,
    _marketplace: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _initOwner,
      _marketplace,
      overrides || {}
    );
  }
  override attach(address: string): NalndaAirdrop {
    return super.attach(address) as NalndaAirdrop;
  }
  override connect(signer: Signer): NalndaAirdrop__factory {
    return super.connect(signer) as NalndaAirdrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NalndaAirdropInterface {
    return new utils.Interface(_abi) as NalndaAirdropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NalndaAirdrop {
    return new Contract(address, _abi, signerOrProvider) as NalndaAirdrop;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  NalndaToken,
  NalndaTokenInterface,
} from "../../../contracts/tokens/NalndaToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_airdropContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_accountForRemainingTokens",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346103f4576001600160401b0390601f90610a9390601f193883900384810182168301908682118483101761030457808491604096879485528339810103126103f45761004d82610418565b9061005b6020809401610418565b956100646103f9565b95600c87526b2730b6373230902a37b5b2b760a11b858801526100856103f9565b9660068852654e414c4e444160d01b868901528051918383116103045760039283546001938482811c921680156103ea575b8a8310146103d4578184849311610383575b5089908483116001146103255760009261031a575b505060001982861b1c191690831b1783555b88519384116103045760049889548381811c911680156102fa575b898210146102e55782811161029f575b508791851160011461023b5784955090849291600095610230575b50501b92600019911b1c19161784555b6001600160a01b0390811694851561021957600254956a0b2abc7767ce87fd80000096878101809111610204578495969760009160025582825281865287822081815401905587519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958691a316918215610219576002546b01926c61d88071967680000090818101809111610204576000949596506002558484528382528584208181540190558551908152a351610666908161042d8239f35b601187634e487b7160e01b6000525260246000fd5b835163ec442f0560e01b8152600081870152602490fd5b015193503880610136565b9291948416928960005284886000209460005b8a89838310610288575050501061026e575b50505050811b018455610146565b01519060f884600019921b161c1916905538808080610260565b86860151895590970196948501948893500161024e565b8a600052886000208380880160051c8201928b89106102dc575b0160051c019084905b8281106102d057505061011b565b600081550184906102c2565b925081926102b9565b60228b634e487b7160e01b6000525260246000fd5b90607f169061010b565b634e487b7160e01b600052604160045260246000fd5b0151905038806100de565b908886941691876000528b6000209260005b8d82821061036d5750508411610355575b505050811b0183556100f0565b015160001983881b60f8161c19169055388080610348565b8385015186558997909501949384019301610337565b90915085600052896000208480850160051c8201928c86106103cb575b918791869594930160051c01915b8281106103bc5750506100c9565b600081558594508791016103ae565b925081926103a0565b634e487b7160e01b600052602260045260246000fd5b91607f16916100b7565b600080fd5b60408051919082016001600160401b0381118382101761030457604052565b51906001600160a01b03821682036103f45756fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461041357508163095ea7b31461036557816318160ddd1461034657816323b872dd14610259578163313ce5671461023d57816370a082311461020657816395d89b411461010357508063a9059cbb146100d35763dd62ed3e1461008857600080fd5b346100cf57806003193601126100cf57806020926100a4610518565b6100ac610533565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100cf57806003193601126100cf576020906100fc6100f2610518565b6024359033610567565b5160018152f35b8383346100cf57816003193601126100cf5780519082845460018160011c90600183169283156101fc575b60209384841081146101e9578388529081156101cd5750600114610195575b505050829003601f01601f19168201926001600160401b03841183851017610182575082918261017e9252826104cf565b0390f35b634e487b7160e01b815260418552602490fd5b919250868652828620918387935b8385106101b9575050505083010185808061014d565b8054888601830152930192849082016101a3565b60ff1916878501525050151560051b840101905085808061014d565b634e487b7160e01b895260228a52602489fd5b91607f169161012e565b5050346100cf5760203660031901126100cf5760209181906001600160a01b0361022e610518565b16815280845220549051908152f35b5050346100cf57816003193601126100cf576020905160128152f35b9050823461034357606036600319011261034357610275610518565b61027d610533565b916044359360018060a01b0383168083526001602052868320338452602052868320549160001983036102b9575b6020886100fc898989610567565b86831061032157811561030a5733156102f3575082526001602090815286832033845281529186902090859003905582906100fc876102ab565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b905061033f868851938493637dc7a0d960e11b855233908501610549565b0390fd5b80fd5b5050346100cf57816003193601126100cf576020906002549051908152f35b90503461040f578160031936011261040f5761037f610518565b6024359033156103f8576001600160a01b03169182156103e157508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b8280fd5b8490843461040f578260031936011261040f578260035460018160011c90600183169283156104c5575b60209384841081146101e9578388529081156101cd575060011461048c57505050829003601f01601f19168201926001600160401b03841183851017610182575082918261017e9252826104cf565b91925060038652828620918387935b8385106104b1575050505083010185808061014d565b80548886018301529301928490820161049b565b91607f169161043d565b6020808252825181830181905290939260005b82811061050457505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016104e2565b600435906001600160a01b038216820361052e57565b600080fd5b602435906001600160a01b038216820361052e57565b604091949392606082019560018060a01b0316825260208201520152565b916001600160a01b0380841692831561061757169283156105fe57600090838252816020526040822054908382106105e1575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b61033f8460405193849363391434e360e21b855260048501610549565b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fdfea264697066735822122047ad0c5c7578a95ef223f183962c7ca93c3ea4a4004591a1c92520ffad88241a64736f6c63430008190033";

type NalndaTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NalndaTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NalndaToken__factory extends ContractFactory {
  constructor(...args: NalndaTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _airdropContract: PromiseOrValue<string>,
    _accountForRemainingTokens: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NalndaToken> {
    return super.deploy(
      _airdropContract,
      _accountForRemainingTokens,
      overrides || {}
    ) as Promise<NalndaToken>;
  }
  override getDeployTransaction(
    _airdropContract: PromiseOrValue<string>,
    _accountForRemainingTokens: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _airdropContract,
      _accountForRemainingTokens,
      overrides || {}
    );
  }
  override attach(address: string): NalndaToken {
    return super.attach(address) as NalndaToken;
  }
  override connect(signer: Signer): NalndaToken__factory {
    return super.connect(signer) as NalndaToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NalndaTokenInterface {
    return new utils.Interface(_abi) as NalndaTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NalndaToken {
    return new Contract(address, _abi, signerOrProvider) as NalndaToken;
  }
}
